1. Find all information about each product?

 -> db.collection.find()

2. Find the product price which are between 400 to 600? 

 -> db.collection.find({
  "product_price": {
    $gte: 400,
    $lte: 600
  }
})

3. Find the product price which are not between 400 to 600?

 -> db.collection.find({
  "product_price": {
    $not: {
      $gte: 400,
      $lte: 600
    }
  }
})

4. List the four products which are greater than 500 in price

 -> db.collection.find({
  "product_price": {
    $gt: 500
  }
}).limit(5)

5. Find the product name and product material of each product?

 -> db.collection.find({},
{
  "product_name": 1,
  "product_material": 1
})

6. Find the product with row id of 10?

 -> db.collection.find({
  "id": "10"
})

7. Find only the product name and product material of each product?

 -> db.collection.find({},
{
  "_id": 0,
  "product_name": 1,
  "product_material": 1
})

8. Find all products which contain the value of soft in product material?

-> db.collection.findMany({
  "product_material": "Soft"
})

9. Find product which contain product color indigo and product price 492.00?

 -> db.collection.find({
  $or: [
    {
      "product_price": 492.00
    },
    {
      "product_color": "indigo"
    }
  ]
})

10. Delete the products with same product price:

 -> db.collections.aggregate([
  {
    $group: {
      _id: "$product_price",
      count: { $sum: 1 },
      ids: { $addToSet: "$_id" }
    }
  },
  {
    $match: {
      count: { $gt: 1 }
    }
  }
]).forEach(function(doc) {
  doc.ids.shift(); // Remove the first ID to keep one instance
  db.products.deleteMany({ _id: { $in: doc.ids } });
});